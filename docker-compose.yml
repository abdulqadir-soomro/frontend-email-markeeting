version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7
    container_name: email-marketing-db
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: email-marketing
    volumes:
      - mongodb_data:/data/db
    networks:
      - email-marketing-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: email-marketing-backend
    restart: unless-stopped
    ports:
      - '5000:5000'
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/email-marketing?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=7d
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - APP_URL=${APP_URL}
      - API_URL=${API_URL}
      - CORS_ORIGINS=${CORS_ORIGINS}
    depends_on:
      - mongodb
    networks:
      - email-marketing-network

  # Frontend (Next.js)
  # Uncomment if you want to run frontend in Docker too
  # frontend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: email-marketing-frontend
  #   restart: unless-stopped
  #   ports:
  #     - '3000:3000'
  #   environment:
  #     - NEXT_PUBLIC_API_URL=http://localhost:5000/api
  #   depends_on:
  #     - backend
  #   networks:
  #     - email-marketing-network

volumes:
  mongodb_data:

networks:
  email-marketing-network:
    driver: bridge

